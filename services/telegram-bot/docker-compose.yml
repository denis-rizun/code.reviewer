services:
  bot:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${OUTER_BOT_PORT}:${INNER_BOT_PORT}"
    env_file:
      - .env
    networks:
      - nw

  zookeeper:
    image: confluentinc/cp-zookeeper:${ZOOKEEPER_VERSION}
    env_file:
      - .env
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME}
    ports:
      - "${ZOOKEEPER_CLIENT_PORT}:${ZOOKEEPER_CLIENT_PORT}"
    networks:
      - nw

  kafka:
    image: confluentinc/cp-kafka:${KAFKA_VERSION}
    depends_on:
      - zookeeper
    env_file:
      - .env
    ports:
      - "${OUTER_KAFKA_PORT}:${INNER_KAFKA_PORT}"
      - "${KAFKA_DOCKER_PORT}:${KAFKA_DOCKER_PORT}"
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_CLIENT_PORT}

      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:${KAFKA_DOCKER_PORT},PLAINTEXT_HOST://localhost:${OUTER_KAFKA_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_REPLICATION_FACTOR}
    networks:
      - nw

networks:
  nw:
    driver: bridge